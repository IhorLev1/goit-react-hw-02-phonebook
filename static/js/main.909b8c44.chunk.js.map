{"version":3,"sources":["components/PhoneBook/PhoneBook.module.css","components/Form/Form.module.css","components/Form/Form.js","components/PhoneBook/PhoneBook.js","components/Filter/Filter.js","components/App.js","index.js","components/box.module.css"],"names":["module","exports","INITIAL__STATE","name","number","Form","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","shortid","generate","resetForm","onCheckUnique","alert","this","className","s","form","onSubmit","input","type","onChange","st","myButton","Component","PhoneBookItem","onRemove","onClick","PhoneBook","contacts","length","phoneList","map","contact","Filter","filter","App","handleAddContact","newContact","handleCheckUniqueContact","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","box","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,sB,+KCK9CC,EAAiB,CACrBC,KAAM,GACNC,OAAQ,IA6EKC,E,4MAzEbC,MAAQ,CACNH,KAAM,GACNC,OAAQ,I,EAGVG,iBAAmB,YAAiB,IAAdC,EAAa,EAAbA,OACZL,EAAgBK,EAAhBL,KAAMM,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,iBAAmB,SAAAC,GACjBA,EAAEC,iBADoB,MAEG,EAAKP,MAAtBH,EAFc,EAEdA,KAAMC,EAFQ,EAERA,OACNU,EAAU,EAAKC,MAAfD,MAEgB,EAAKE,iBAI7BF,EAAM,CAAEG,GAAIC,IAAQC,WAAYhB,OAAMC,WAEtC,EAAKgB,c,EAGPJ,aAAe,WAAO,IAAD,EACM,EAAKV,MAAtBH,EADW,EACXA,KAAMC,EADK,EACLA,OACNiB,EAAkB,EAAKN,MAAvBM,cAER,OAAKlB,GAASC,EAKPiB,EAAclB,IAJnBmB,MAAM,+OACC,I,EAMXF,UAAY,WACV,EAAKV,SAASR,I,uDAGN,IAAD,EACkBqB,KAAKjB,MAAtBH,EADD,EACCA,KAAMC,EADP,EACOA,OACRG,EAAmBgB,KAAKhB,iBACxBI,EAAmBY,KAAKZ,iBAE9B,OACE,uBAAMa,UAAWC,IAAEC,KAAMC,SAAUhB,EAAnC,UACE,wBAAOa,UAAWC,IAAEG,MAApB,iBAEE,uBACEC,KAAK,OACL1B,KAAK,OACLM,MAAON,EACP2B,SAAUvB,OAGd,wBAAOiB,UAAWC,IAAEG,MAApB,mBAEE,uBACEC,KAAK,MACL1B,KAAK,SACLM,MAAOL,EACP0B,SAAUvB,OAGd,wBAAQiB,UAAWO,IAAGC,SAAUH,KAAK,SAArC,gC,GAlEWI,a,yBCTbC,EAAgB,SAAC,GAAoC,IAAlCjB,EAAiC,EAAjCA,GAAId,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQ+B,EAAe,EAAfA,SACzC,OACE,+BACGhC,EADH,IACUC,EADV,IACkB,wBAAQgC,QAAS,kBAAMD,EAASlB,IAAhC,wBAgBPoB,EAXG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUH,EAAe,EAAfA,SAC7B,OAAwB,IAApBG,EAASC,OAAqB,KAEhC,oBAAIf,UAAWC,IAAEe,UAAjB,SACGF,EAASG,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,2BAAmBA,GAAnB,IAA4BP,SAAUA,WCC/BQ,EAdA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQd,EAAe,EAAfA,SACxB,OACE,wBAAON,UAAWC,IAAEG,MAApB,iCAEE,uBACEC,KAAK,OACL1B,KAAK,SACLM,MAAOmC,EACPd,SAAU,gBAAGtB,EAAH,EAAGA,OAAH,OAAgBsB,EAAStB,EAAOC,cC6DnCoC,E,4MA9DbvC,MAAQ,CACNgC,SAAU,CACR,CAAErB,GAAI,OAAQd,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEa,GAAI,OAAQd,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEa,GAAI,OAAQd,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEa,GAAI,OAAQd,KAAM,iBAAkBC,OAAQ,cAEhDwC,OAAQ,I,EAGVE,iBAAmB,SAAAC,GAAU,OAC3B,EAAKrC,UAAS,gBAAG4B,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,CAAES,GAAH,mBAAkBT,S,EAE/DU,yBAA2B,SAAA7C,GAAS,IAG5B8C,IAFe,EAAK3C,MAAlBgC,SAE0BY,MAAK,SAAAR,GAAO,OAAIA,EAAQvC,OAASA,KAInE,OAFA8C,GAAkB3B,MAAM,2IAEhB2B,G,EAGVE,oBAAsB,SAAAlC,GACpB,EAAKP,UAAS,kBAAmB,CAC/B4B,SADY,EAAGA,SACIM,QAAO,SAAAF,GAAO,OAAIA,EAAQzB,KAAOA,U,EAIxDmC,mBAAqB,SAAAR,GACnB,EAAKlC,SAAS,CAAEkC,Y,EAGlBS,mBAAqB,WAAO,IAAD,EACI,EAAK/C,MAA1BgC,EADiB,EACjBA,SAAUM,EADO,EACPA,OAClB,OAAON,EAASM,QAAO,SAAAF,GAAO,OAC5BA,EAAQvC,KAAKmD,cAAcC,SAASX,EAAOU,mB,uDAIrC,IACAV,EAAWrB,KAAKjB,MAAhBsC,OACFY,EAAkBjC,KAAK8B,qBACvBL,EAA2BzB,KAAKyB,yBAChCF,EAAmBvB,KAAKuB,iBACxBM,EAAqB7B,KAAK6B,mBAC1BD,EAAsB5B,KAAK4B,oBAEjC,OACE,sBAAK3B,UAAWC,IAAEgC,IAAlB,UACE,sCACA,cAAC,EAAD,CACE3C,MAAOgC,EACPzB,cAAe2B,IAEjB,sCACA,cAAC,EAAD,CAAQJ,OAAQA,EAAQd,SAAUsB,IAClC,cAAC,EAAD,CAAWd,SAAUkB,EAAiBrB,SAAUgB,W,GA1DtClB,aCHlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B9D,EAAOC,QAAU,CAAC,IAAM,iBAAiB,SAAW,yB","file":"static/js/main.909b8c44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneList\":\"PhoneBook_phoneList__1WQbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__MLQKL\",\"input\":\"Form_input__1Yz2V\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport s from './Form.module.css';\r\nimport st from '../box.module.css';\r\n\r\nconst INITIAL__STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidatedForm = this.validateForm();\r\n\r\n    if (!isValidatedForm) return;\r\n\r\n    onAdd({ id: shortid.generate(), name, number });\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n\r\n    if (!name || !number) {\r\n      alert('Одно или больше полей осталось не заполненым');\r\n      return false;\r\n    }\r\n\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState(INITIAL__STATE);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const handleChangeForm = this.handleChangeForm;\r\n    const handleFormSubmit = this.handleFormSubmit;\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleFormSubmit}>\r\n        <label className={s.input}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChangeForm}\r\n          />\r\n        </label>\r\n        <label className={s.input}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChangeForm}\r\n          />\r\n        </label>\r\n        <button className={st.myButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import s from './PhoneBook.module.css';\r\n\r\nconst PhoneBookItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li>\r\n      {name}:{number} <button onClick={() => onRemove(id)}>delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst PhoneBook = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul className={s.phoneList}>\r\n      {contacts.map(contact => (\r\n        <PhoneBookItem {...contact} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PhoneBook;\r\n","import s from '../Form/Form.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <label className={s.input}>\r\n      Find contact by name\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={({ target }) => onChange(target.value)}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\n\r\nimport Form from './Form/Form';\r\nimport PhoneBook from './PhoneBook/PhoneBook';\r\nimport Filter from './Filter/Filter';\r\n\r\nimport s from './box.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  handleAddContact = newContact =>\r\n    this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\r\n\r\n  handleCheckUniqueContact = name => {\r\n    const { contacts } = this.state;\r\n\r\n    const isExistContact = !!contacts.find(contact => contact.name === name);\r\n\r\n    isExistContact && alert('Такой контакт существует');\r\n\r\n    return !isExistContact;\r\n  };\r\n\r\n  handleRemoveContact = id => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  handleFilterChange = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    const handleCheckUniqueContact = this.handleCheckUniqueContact;\r\n    const handleAddContact = this.handleAddContact;\r\n    const handleFilterChange = this.handleFilterChange;\r\n    const handleRemoveContact = this.handleRemoveContact;\r\n\r\n    return (\r\n      <div className={s.box}>\r\n        <h2>Form</h2>\r\n        <Form\r\n          onAdd={handleAddContact}\r\n          onCheckUnique={handleCheckUniqueContact}\r\n        />\r\n        <h2>Book</h2>\r\n        <Filter filter={filter} onChange={handleFilterChange} />\r\n        <PhoneBook contacts={visibleContacts} onRemove={handleRemoveContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"box_box__CkdEb\",\"myButton\":\"box_myButton__REMIc\"};"],"sourceRoot":""}